{"version":3,"file":"static/js/395.f9abe718.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Posts/Post.module.scss?5b4f","components/Posts/Posts.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.scss?ce6f","pages/Home/Home.jsx","service/api.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsList\":\"Post_postsList__JiwXg\",\"postsItem\":\"Post_postsItem__MAEy8\",\"postTitle\":\"Post_postTitle__NG6zJ\",\"postDate\":\"Post_postDate__GcNgp\"};","import styles from \"./Post.module.scss\";\nimport plugImg from \"../../img/plugIMG.jpg\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\n\nexport default function Posts({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul className={styles.postsList}>\n      {movies &&\n        movies.map((movie) => (\n          <li key={nanoid()}>\n            <Link\n              className={styles.postsItem}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              {movie.poster_path !== null ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt=\"\"\n                  width=\"172\"\n                  height=\"258\"\n                />\n              ) : (\n                <img src={plugImg} alt=\"\" width=\"172\" height=\"258\"></img>\n              )}\n\n              <h2 className={styles.postTitle}>{movie.title}</h2>\n              <Moment className={styles.postDate} format=\"YYYY\">\n                {movie.release_date}\n              </Moment>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nPosts.propType = {\n  movie: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      release_date: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__1aNQh\"};","import styles from \"./Home.module.scss\";\n\nimport Posts from \"../../components/Posts/Posts\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { fetchPopularMovie } from \"../../service/api\";\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const targetScroll = useRef(null);\n\n  const observer = new IntersectionObserver(\n    (entries, observer) => {\n      if (entries[0].isIntersecting) {\n        setPage((prevPage) => prevPage + 1);\n      }\n    },\n    {\n      root: null,\n      rootMargin: \"400px\",\n      threshold: 1,\n    }\n  );\n\n  useEffect(() => {\n    observer.observe(targetScroll.current);\n    fetchMovies();\n\n    async function fetchMovies() {\n      try {\n        const data = await fetchPopularMovie();\n        setMovies([...data.results]);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    loadMoreData();\n    async function loadMoreData() {\n      try {\n        const data = await fetchPopularMovie(page);\n\n        if (data.results.length === 0) {\n          console.log(\"unobserve\");\n          observer.unobserve(targetScroll);\n          return;\n        }\n\n        setMovies([...movies, ...data.results]);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  return (\n    <main>\n      <h1 className={styles.title}>Most Popular Movies</h1>\n      <Posts movies={movies} />\n      <div className=\"target-element\" ref={targetScroll}></div>\n    </main>\n  );\n}\n\n// https://image.tmdb.org/t/p/original\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  params: { api_key: \"9bc0101e379e5e6c089a5fdeff30de32\" },\n});\n\nexport const fetchPopularMovie = async (page = 1) => {\n  const { data } = await instance.get(\"/trending/movie/day\", {\n    params: { page },\n  });\n  return data;\n};\n\nexport const fetchSearchMovie = async (query) => {\n  const { data } = await instance.get(\"/search/movie\", { params: { query } });\n  return data;\n};\n\nexport const fetchGetMovieDetails = async (movie_id) => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const fetchGetMovieCredits = async (movie_id) => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const fetchGetMovieReviews = async (movie_id) => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n\nexport const fetchGetMovieVideo = async (movie_id) => {\n  const { data } = await instance.get(`/movie/${movie_id}/videos`);\n  return data;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Posts","movies","location","useLocation","className","styles","map","movie","to","id","state","from","poster_path","src","alt","width","height","plugImg","title","format","release_date","nanoid","propType","PropTypes","Home","useState","setMovies","page","setPage","targetScroll","useRef","observer","IntersectionObserver","entries","isIntersecting","prevPage","root","rootMargin","threshold","useEffect","fetchPopularMovie","data","results","console","error","observe","current","fetchMovies","length","log","unobserve","loadMoreData","ref","instance","axios","baseURL","params","api_key","get","fetchSearchMovie","query","fetchGetMovieDetails","movie_id","fetchGetMovieCredits","fetchGetMovieReviews","fetchGetMovieVideo","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}