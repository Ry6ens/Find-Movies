{"version":3,"file":"static/js/295.e803e599.chunk.js","mappings":"qNACA,EAA6B,yBAA7B,EAAmE,yBAAnE,EAAyG,yBAAzG,EAAwI,kB,iDCOzH,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,8CAGd,mHAEuBC,EAAAA,EAAAA,IAAqBN,GAF5C,OAEUO,EAFV,OAGIH,EAAWG,EAAKC,MAHpB,gDAKIC,QAAQC,IAAR,MALJ,0DAHc,0DACdC,EAWD,GAAE,CAACX,KAGF,8BACE,eAAIY,UAAWC,EAAf,SACGV,GACCA,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACV,gBAAaN,UAAWC,EAAxB,WACE,gBAAKD,UAAWC,EAAhB,SACoB,OAAjBK,GACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,EACLJ,UAAWC,KAGb,gBAAKM,IAAKE,EAASD,IAAKJ,EAAMJ,UAAWC,OAG7C,4BACE,uBAAIG,KACJ,uBAAIC,SAdCF,EADC,OAsBrB,C,kNClDKO,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CAAEC,QAAS,sCAGRC,EAAiB,yCAAG,gHAAOC,EAAP,+BAAc,EAAd,SACRN,EAASO,IAAI,sBAAuB,CACzDJ,OAAQ,CAAEG,KAAAA,KAFmB,uBACvBrB,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBuB,EAAgB,yCAAG,WAAOC,GAAP,8FACPT,EAASO,IAAI,gBAAiB,CAAEJ,OAAQ,CAAEM,MAAAA,KADnC,uBACtBxB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhByB,EAAoB,yCAAG,WAAOC,GAAP,8FACXX,EAASO,IAAT,iBAAuBI,IADZ,uBAC1B1B,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,sDAKpBD,EAAoB,yCAAG,WAAO2B,GAAP,8FACXX,EAASO,IAAT,iBAAuBI,EAAvB,aADW,uBAC1B1B,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,sDAKpB2B,EAAoB,yCAAG,WAAOD,GAAP,8FACXX,EAASO,IAAT,iBAAuBI,EAAvB,aADW,uBAC1B1B,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,sDAKpB4B,EAAkB,yCAAG,WAAOF,GAAP,8FACTX,EAASO,IAAT,iBAAuBI,EAAvB,YADS,uBACxB1B,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.scss?a69e","pages/Cast/Cast.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"creditList\":\"Cast_creditList__4c-C0\",\"creditItem\":\"Cast_creditItem__87veO\",\"imgOverlay\":\"Cast_imgOverlay__RmHeG\",\"img\":\"Cast_img__2Sc-7\"};","import styles from \"./Cast.module.scss\";\nimport plugImg from \"../../img/plugIMG.jpg\";\n\nimport { fetchGetMovieCredits } from \"../../service/api\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    fetchCredits();\n\n    async function fetchCredits() {\n      try {\n        const data = await fetchGetMovieCredits(movieId);\n        setCredits(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  return (\n    <section>\n      <ul className={styles.creditList}>\n        {credits &&\n          credits.map(({ id, name, character, profile_path }) => (\n            <li key={id} className={styles.creditItem}>\n              <div className={styles.imgOverlay}>\n                {profile_path !== null ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                    alt={name}\n                    className={styles.img}\n                  />\n                ) : (\n                  <img src={plugImg} alt={name} className={styles.img} />\n                )}\n              </div>\n              <div>\n                <p>{name}</p>\n                <p>{character}</p>\n              </div>\n            </li>\n          ))}\n      </ul>\n    </section>\n  );\n}\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  params: { api_key: \"9bc0101e379e5e6c089a5fdeff30de32\" },\n});\n\nexport const fetchPopularMovie = async (page = 1) => {\n  const { data } = await instance.get(\"/trending/movie/day\", {\n    params: { page },\n  });\n  return data;\n};\n\nexport const fetchSearchMovie = async (query) => {\n  const { data } = await instance.get(\"/search/movie\", { params: { query } });\n  return data;\n};\n\nexport const fetchGetMovieDetails = async (movie_id) => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const fetchGetMovieCredits = async (movie_id) => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const fetchGetMovieReviews = async (movie_id) => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n\nexport const fetchGetMovieVideo = async (movie_id) => {\n  const { data } = await instance.get(`/movie/${movie_id}/videos`);\n  return data;\n};\n"],"names":["Cast","movieId","useParams","useState","credits","setCredits","useEffect","fetchGetMovieCredits","data","cast","console","log","fetchCredits","className","styles","map","id","name","character","profile_path","src","alt","plugImg","instance","axios","baseURL","params","api_key","fetchPopularMovie","page","get","fetchSearchMovie","query","fetchGetMovieDetails","movie_id","fetchGetMovieReviews","fetchGetMovieVideo"],"sourceRoot":""}